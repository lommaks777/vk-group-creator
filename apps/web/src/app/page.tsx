'use client';

import { useState } from 'react';
import { useForm } from 'react-hook-form';
import { toast } from 'react-hot-toast';
import { Plus, MapPin, Phone, MessageCircle, Home, Building } from 'lucide-react';
import { StudentData } from '@/types';
import { apiClient } from '@/lib/api';
import { StudentForm } from '@/components/StudentForm';
import { GroupCreationProgress } from '@/components/GroupCreationProgress';
import { GroupResult } from '@/components/GroupResult';

type FormStep = 'form' | 'oauth' | 'progress' | 'result';

export default function HomePage() {
  const [currentStep, setCurrentStep] = useState<FormStep>('form');
  const [jobId, setJobId] = useState<string>('');
  const [groupResult, setGroupResult] = useState<any>(null);
  const [studentData, setStudentData] = useState<StudentData | null>(null);

  const handleFormSubmit = async (data: StudentData) => {
    try {
      setStudentData(data);
      setCurrentStep('oauth');
      
      const response = await apiClient.initGroupCreation(data);
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ OAuth VK
      window.location.href = response.auth_url;
    } catch (error: any) {
      toast.error(error.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã');
      setCurrentStep('form');
    }
  };

  const handleOAuthCallback = (jobId: string) => {
    setJobId(jobId);
    setCurrentStep('progress');
  };

  const handleGroupCreated = (result: any) => {
    setGroupResult(result);
    setCurrentStep('result');
  };

  const handleStartOver = () => {
    setCurrentStep('form');
    setJobId('');
    setGroupResult(null);
    setStudentData(null);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="inline-flex items-center justify-center w-16 h-16 bg-vk-600 rounded-full mb-4">
            <Plus className="w-8 h-8 text-white" />
          </div>
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
          </h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –¥–ª—è –≤–∞—à–µ–≥–æ –º–∞—Å—Å–∞–∂–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ 
            –≤—Å–µ–≥–æ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∏–∫–æ–≤
          </p>
        </div>

        {/* Progress Steps */}
        <div className="max-w-4xl mx-auto mb-8">
          <div className="flex items-center justify-center space-x-8">
            {[
              { key: 'form', label: '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ', icon: 'üìù' },
              { key: 'oauth', label: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', icon: 'üîê' },
              { key: 'progress', label: '–°–æ–∑–¥–∞–Ω–∏–µ', icon: '‚öôÔ∏è' },
              { key: 'result', label: '–ì–æ—Ç–æ–≤–æ', icon: '‚úÖ' },
            ].map((step, index) => (
              <div key={step.key} className="flex items-center">
                <div
                  className={`flex items-center justify-center w-12 h-12 rounded-full text-lg font-semibold ${
                    currentStep === step.key
                      ? 'bg-vk-600 text-white'
                      : ['form', 'oauth', 'progress', 'result'].indexOf(currentStep) > index
                      ? 'bg-green-500 text-white'
                      : 'bg-gray-200 text-gray-500'
                  }`}
                >
                  {step.icon}
                </div>
                <span
                  className={`ml-2 text-sm font-medium ${
                    currentStep === step.key
                      ? 'text-vk-600'
                      : ['form', 'oauth', 'progress', 'result'].indexOf(currentStep) > index
                      ? 'text-green-600'
                      : 'text-gray-500'
                  }`}
                >
                  {step.label}
                </span>
                {index < 3 && (
                  <div
                    className={`w-16 h-0.5 mx-4 ${
                      ['form', 'oauth', 'progress', 'result'].indexOf(currentStep) > index
                        ? 'bg-green-500'
                        : 'bg-gray-200'
                    }`}
                  />
                )}
              </div>
            ))}
          </div>
        </div>

        {/* Main Content */}
        <div className="max-w-2xl mx-auto">
          {currentStep === 'form' && (
            <StudentForm onSubmit={handleFormSubmit} />
          )}

          {currentStep === 'oauth' && (
            <div className="card text-center">
              <div className="w-16 h-16 bg-vk-600 rounded-full mx-auto mb-4 flex items-center justify-center">
                <MessageCircle className="w-8 h-8 text-white" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-4">
                –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
              </h2>
              <p className="text-gray-600 mb-6">
                –í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. 
                –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–∏–º –≥—Ä—É–ø–ø–∞–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.
              </p>
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <p className="text-sm text-blue-800">
                  <strong>–í–∞–∂–Ω–æ:</strong> –ï—Å–ª–∏ —É –≤–∞—Å –≤–∫–ª—é—á–µ–Ω–∞ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, 
                  –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
                </p>
              </div>
            </div>
          )}

          {currentStep === 'progress' && jobId && (
            <GroupCreationProgress
              jobId={jobId}
              studentData={studentData}
              onComplete={handleGroupCreated}
              onError={() => setCurrentStep('form')}
            />
          )}

          {currentStep === 'result' && groupResult && (
            <GroupResult
              result={groupResult}
              studentData={studentData}
              onStartOver={handleStartOver}
            />
          )}
        </div>

        {/* Features */}
        {currentStep === 'form' && (
          <div className="max-w-6xl mx-auto mt-16">
            <h2 className="text-3xl font-bold text-center text-gray-900 mb-12">
              –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ
            </h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {[
                {
                  icon: <Building className="w-8 h-8 text-vk-600" />,
                  title: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞',
                  description: '–ö—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ —Å –∞–≤–∞—Ç–∞—Ä–æ–º –∏ –æ–±–ª–æ–∂–∫–æ–π',
                },
                {
                  icon: <MessageCircle className="w-8 h-8 text-vk-600" />,
                  title: '–ì–æ—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã',
                  description: '8 –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —É—Å–ª—É–≥–∞—Ö',
                },
                {
                  icon: <MapPin className="w-8 h-8 text-vk-600" />,
                  title: '–†–∞–∑–¥–µ–ª —É—Å–ª—É–≥',
                  description: '–ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–∞—Ä–∫–µ—Ç —Å –≤–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏ –∏ —Ü–µ–Ω–∞–º–∏',
                },
                {
                  icon: <Phone className="w-8 h-8 text-vk-600" />,
                  title: '–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫',
                  description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤',
                },
                {
                  icon: <Home className="w-8 h-8 text-vk-600" />,
                  title: '–û—Ç–∑—ã–≤—ã',
                  description: '–ì–æ—Ç–æ–≤–∞—è —Ç–µ–º–∞ –¥–ª—è —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤',
                },
                {
                  icon: <Plus className="w-8 h-8 text-vk-600" />,
                  title: '–ó–∞ 60 —Å–µ–∫—É–Ω–¥',
                  description: '–ü–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞ –∑–∞ –º–∏–Ω—É—Ç—É',
                },
              ].map((feature, index) => (
                <div key={index} className="card text-center">
                  <div className="flex justify-center mb-4">
                    {feature.icon}
                  </div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">
                    {feature.title}
                  </h3>
                  <p className="text-gray-600">
                    {feature.description}
                  </p>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
